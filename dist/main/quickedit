import pickle
from datetime import datetime, timedelta, time
import sys
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *
import enum
class TaskType(enum.Enum):
    ACTIVE = 1
    TIMER = 2
    SUSTAIN = 3
    BEDTIME = 4

class Task:
    def __init__(self, task_name: str, task_description: str, task_type: TaskType):
        self.task_name = task_name
        self.task_description = task_description
        self.task_type = task_type

    def display_task_name(self):
        print(f"Task Name: {self.task_name}")
        print(f"Task Description: {self.task_description}")
        print(f"Task Type: {self.task_type.name}")

class ActiveTask(Task):
    def __init__(self, task_name: str, task_description: str, reminder: str, due_by: str):
        super().__init__(task_name, task_description, TaskType.ACTIVE)

class TimerTask(Task):
    def __init__(self, task_name: str, task_description: str, reminder: str, due_by: str, duration: int, block_list: str):
        super().__init__(task_name, task_description, TaskType.TIMER)
    def display_timer_task_details(self):

class SustainTask(Task):
    def __init__(self, task_name: str, task_description: str, contract: str, endTime: str):
        super().__init__(task_name, task_description, TaskType.SUSTAIN)
    def display_contract(self):
        print(f"Contract: {self.contract}")

class BedTime(Task):
    def __init__(self, task_name: str, task_description: str, bed_time: str, reminder:str, shutdown: bool ):
        super().__init__(task_name, task_description, TaskType.BEDTIME)


class TodoListWindow(QWidget):
    def __init__(self, todo_list, parent=None):
        super().__init__(parent)
        self.todo_list = todo_list


    def initUI(self):
        #displays task list and you can use this to open "addtaskwindow"

class AddTaskWindow(QDialog):
    def __init__(self, parent, todo_list):
        self.todo_list = todo_list
        super().__init__(parent)
        self.initUI()

    def initUI(self):
        #You insert values to initalize a task object which is put into a list of tasks in the self

class SettingsWindow(QWidget):
    #setting stuff

class MainWindow(QMainWindow):
    def __init__(self, todo_list, parent=None):
        super().__init__(parent)
        self.setGeometry(0, 0, 1000, 800)
        self.todo_list = todo_list
        self.initUI()

   #calls todolistwindow

def main():
    #calls main window

if __name__ == '__main__':
    main()